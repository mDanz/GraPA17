#version 440
 
layout(quads, equal_spacing, cw) in;

in vec3 tcPosition[];

uniform mat4 mvMatrix;
uniform mat4 projMatrix;

uniform sampler2D heightMap;
uniform float terrainHeightScale;
uniform float totalTerrainWidth;

out vec3 posInWorld;
out float height;

//quad interpol
vec3 interpolate(in vec3 v0, in vec3 v1, in vec3 v2, in vec3 v3)
{
 vec3 a = mix(v0, v1, gl_TessCoord.x);
 vec3 b = mix(v3, v2, gl_TessCoord.x);
 return mix(a, b, gl_TessCoord.y);
}
 
void main()
{ 
	vec3 tePosition = interpolate(gl_in[0].gl_Position.xyz, gl_in[1].gl_Position.xyz, gl_in[2].gl_Position.xyz, gl_in[3].gl_Position.xyz);
	//vec2 uv = gl_Position.xz;

	//vec3 tePosition = interpolate(tcPosition[0], tcPosition[1], tcPosition[2], tcPosition[3]);

    // sample the height
	vec2 totalSize = vec2(totalTerrainWidth, totalTerrainWidth);
    vec2 uv = (tePosition.xz+(totalSize/2.f))/totalSize;

    int lod = 0;
    height = textureLod(heightMap, uv, lod).r;
    //height = terrainHeightScale;
    tePosition.y = height * terrainHeightScale;
    posInWorld = tePosition;

	gl_Position = projMatrix * mvMatrix * vec4(tePosition, 1.0f);
}